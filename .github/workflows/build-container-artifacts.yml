name: Build Container Artifacts
on: 
  push:
    branches:
      - 'main'

jobs:
   build:
    name: Alpha Build Base Image
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v2

       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3
       
       - name: Workbase Build, tag, and push image to Amazon ECR
         if: always()
         run: uname -m
#             cd sh-docker/workbase
#            pwd
#            ls -lrt build/getarch.sh
#            ls -lrt
#            docker build -t riteshgoyal590/test-project:${{ github.sha }} .  --no-cache
#            docker tag riteshgoyal590/test-project:${{ github.sha }} riteshgoyal590/test-project:latest
#            docker push riteshgoyal590/test-project:${{ github.sha }}
#            docker push riteshgoyal590/test-project:latest

#       - name: Build and push
#         uses: docker/build-push-action@v5
#         if: always()
#         with:
#           context: sh-docker/workbase/
#           push: true
#           tags: |
 
#             $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#             $ECR_REGISTRY/$ECR_REPOSITORY:latest
         
#       - name: Workbase Build, tag, and push image to Amazon ECR
#         if: always()
#         env:
#            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#            ECR_REPOSITORY: workbase
#            IMAGE_TAG: ${{ github.sha }}
#         run: |
#          docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f sh-docker/workbase/Dockerfile  --no-cache
#          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      
#       - name: Php-fpm Build, tag, and push image to Amazon ECR
#         if: always()
#         env:
#             ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#             ECR_REPOSITORY: php-fpm
#             IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  -f sh-docker/php-fpm-base/Dockerfile --no-cache
#           docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest